Loading required package: raster
Loading required package: sp
Loaded gbm 2.1.4
Loading required package: iterators
Loading required package: parallel
Fitting HDS_richness (logged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model fit
gbm.simplify - version 2.9 
simplifying gbm.step model for NA with 12 predictors and 100 observations 
original deviance = 1.1044(0.1654)
variable removal will proceed until average change exceeds the original se
creating initial models...
dropping predictor: 1 2 3 4 5 6 7 8
processing final dropping of variables with full data
1-CEC
2-pH
3-PDQ
4-rough_Clay
5-Clay
6-Elevation
7-rough_MAP
8-rough_CEC
Optimal no. drops = 1
Final predictor list = c("Elevation", "MAP", "PDQ", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "Clay", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "Clay", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "Clay", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Soil.C")Final predictor list = c("MAP", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Soil.C")Final predictor list = c("MAP", "rough_Elevation", "rough_Surface.T", "rough_CEC", "rough_Soil.C")Final predictor list = c("MAP", "rough_Elevation", "rough_Surface.T", "rough_Soil.C")
Simpler predictor set found
Fitting HDS_richness (logged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model re-fit to simplified predictor set
Fitting HDS_richness (logged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model fit
gbm.simplify - version 2.9 
simplifying gbm.step model for NA with 14 predictors and 168 observations 
original deviance = 0.5977(0.1434)
variable removal will proceed until average change exceeds the original se
creating initial models...
dropping predictor: 1 2 3 4 5 6 7 8 9 10 11 12
processing final dropping of variables with full data
1-Surface.T
2-rough_CEC
3-Clay
4-pH
5-PDQ
6-rough_Soil.C
7-rough_Elevation
8-rough_Surface.T
9-rough_PDQ
10-rough_NDVI
11-rough_MAP
12-Elevation
Optimal no. drops = 8
Final predictor list = c("Elevation", "MAP", "PDQ", "CEC", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_CEC", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "CEC", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "CEC", "pH", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "CEC", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI")Final predictor list = c("Elevation", "MAP", "CEC", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI")Final predictor list = c("Elevation", "MAP", "CEC", "rough_MAP", "rough_PDQ", "rough_NDVI")Final predictor list = c("Elevation", "MAP", "CEC", "rough_MAP", "rough_NDVI")Final predictor list = c("Elevation", "MAP", "CEC", "rough_MAP")Final predictor list = c("Elevation", "MAP", "CEC")Final predictor list = c("MAP", "CEC")
Simpler predictor set found
Fitting HDS_richness (logged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model re-fit to simplified predictor set
Fitting mean_QDS_turnover (unlogged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model fit
gbm.simplify - version 2.9 
simplifying gbm.step model for NA with 12 predictors and 100 observations 
original deviance = 0.0047(8e-04)
variable removal will proceed until average change exceeds the original se
creating initial models...
dropping predictor: 1 2 3 4 5 6 7 8 9 10
processing final dropping of variables with full data
1-CEC
2-pH
3-Clay
4-PDQ
5-rough_Soil.C
6-MAP
7-rough_Clay
8-rough_CEC
9-rough_Surface.T
10-Elevation
Optimal no. drops = 2
Final predictor list = c("Elevation", "MAP", "PDQ", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "Clay", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay")Final predictor list = c("Elevation", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC", "rough_Clay")Final predictor list = c("Elevation", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_CEC")Final predictor list = c("Elevation", "rough_Elevation", "rough_MAP", "rough_Surface.T")Final predictor list = c("Elevation", "rough_Elevation", "rough_MAP")Final predictor list = c("rough_Elevation", "rough_MAP")
Simpler predictor set found
Fitting mean_QDS_turnover (unlogged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model re-fit to simplified predictor set
Fitting mean_QDS_turnover (unlogged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model fit
gbm.simplify - version 2.9 
simplifying gbm.step model for NA with 14 predictors and 168 observations 
original deviance = 0.0057(6e-04)
variable removal will proceed until average change exceeds the original se
creating initial models...
dropping predictor: 1 2 3 4 5 6 7 8 9 10 11 12
processing final dropping of variables with full data
1-rough_CEC
2-Surface.T
3-PDQ
4-rough_PDQ
5-pH
6-rough_Surface.T
7-Clay
8-rough_Soil.C
9-Elevation
10-rough_NDVI
11-rough_Elevation
12-rough_MAP
Optimal no. drops = 9
Final predictor list = c("Elevation", "MAP", "PDQ", "Surface.T", "CEC", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "PDQ", "CEC", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_PDQ", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "Clay", "pH", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "Clay", "rough_Elevation", "rough_MAP", "rough_Surface.T", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "Clay", "rough_Elevation", "rough_MAP", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "rough_Elevation", "rough_MAP", "rough_NDVI", "rough_Soil.C")Final predictor list = c("Elevation", "MAP", "CEC", "rough_Elevation", "rough_MAP", "rough_NDVI")Final predictor list = c("MAP", "CEC", "rough_Elevation", "rough_MAP", "rough_NDVI")Final predictor list = c("MAP", "CEC", "rough_Elevation", "rough_MAP")Final predictor list = c("MAP", "CEC", "rough_MAP")Final predictor list = c("MAP", "CEC")
Simpler predictor set found
Fitting mean_QDS_turnover (unlogged) with tc = 1 , lr =  5e-04 , max.trees =  10000
Done (fit_gbm_step())
Inital BRT-model re-fit to simplified predictor set
Done (run_initial_BRTs())
Warning messages:
1: In if (predictor_names_simp == "original") { :
  the condition has length > 1 and only the first element will be used
2: In if (predictor_names_simp == "original") { :
  the condition has length > 1 and only the first element will be used
3: In if (predictor_names_simp == "original") { :
  the condition has length > 1 and only the first element will be used
4: In if (predictor_names_simp == "original") { :
  the condition has length > 1 and only the first element will be used
