"NDVI",
"CEC",
"Clay",
"Soil C",
"pH"
)
gamma_vs_alpha_plot <-
ggplot(gamma_beta_alpha,
aes(avg_QDS_richness, HDS_richness, col = region)) +
ylim(0, 3000) +
xlim(0, 12500) +
geom_point() +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, HDS_richness, col = region)) +
ylim(0, 3000) +
xlim(0, 12500) +
geom_point() +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot
gamma_beta_alpha_HDS
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
ylim(0, 3000) +
xlim(0, 12500) +
geom_point() +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot
gamma_beta_alpha_HDS
View(gamma_beta_alpha_HDS)
# HDS
species_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "species"]
))
# HDS
species_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "species", ]
))
# Region term retained!
# More evidence for value of region term:
turnover_richness_HDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "species", ]
)
HDS_AIC_table <-
AIC(turnover_richness_HDS_m, turnover_richness_HDS_m_no_region)
genus_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "genus", ]
))
family_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "family", ]
))
# HDS
species_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "species", ]
))
genus_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "genus", ]
))
family_turnover_richness_HDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "family", ]
))
# Region term retained!
# More evidence for value of region term:
species_turnover_richness_HDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "species", ]
)
genus_turnover_richness_HDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "genus", ]
)
family_turnover_richness_HDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_HDS[gamma_beta_alpha_HDS$rank == "family", ]
)
species_HDS_AIC_table <-
AIC(species_turnover_richness_HDS_m, species_turnover_richness_HDS_m_no_region)
genus_HDS_AIC_table <-
AIC(genus_turnover_richness_HDS_m, genus_turnover_richness_HDS_m_no_region)
family_HDS_AIC_table <-
AIC(family_turnover_richness_HDS_m, family_turnover_richness_HDS_m_no_region)
# 3QDS
species_turnover_richness_3QDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_3QDS[gamma_beta_alpha_3QDS$rank == "species", ]
))
genus_turnover_richness_3QDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_3QDS[gamma_beta_alpha_3QDS$rank == "genus", ]
))
family_turnover_richness_3QDS_m <- step(lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover +
region * log(avg_QDS_richness + 1) +
region * avg_QDS_turnover,
data = gamma_beta_alpha_3QDS[gamma_beta_alpha_3QDS$rank == "family", ]
))
# Region term retained!
# More evidence for value of region term:
species_turnover_richness_3QDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_3QDS[gamma_beta_alpha_3QDS$rank == "species", ]
)
genus_turnover_richness_3QDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_3QDS[gamma_beta_alpha_3QDS$rank == "genus", ]
)
family_turnover_richness_3QDS_m_no_region <- lm(
richness ~
log(avg_QDS_richness + 1) + avg_QDS_turnover,
data = gamma_beta_alpha_3QDS[gamma_beta_alpha_3QDS$rank == "family", ]
)
species_3QDS_AIC_table <-
AIC(species_turnover_richness_3QDS_m, species_turnover_richness_3QDS_m_no_region)
genus_3QDS_AIC_table <-
AIC(genus_turnover_richness_3QDS_m, genus_turnover_richness_3QDS_m_no_region)
family_3QDS_AIC_table <-
AIC(family_turnover_richness_3QDS_m, family_turnover_richness_3QDS_m_no_region)
# Save to disc
write_rds(
species_turnover_richness_HDS_m,
here::here("analyses/06_outputs/species_turnover_richness_HDS_m.RDS")
)
write_rds(
genus_turnover_richness_HDS_m,
here::here("analyses/06_outputs/genus_turnover_richness_HDS_m.RDS")
)
write_rds(
family_turnover_richness_HDS_m,
here::here("analyses/06_outputs/family_turnover_richness_HDS_m.RDS")
)
write_rds(
species_turnover_richness_3QDS_m,
here::here("analyses/06_outputs/species_turnover_richness_3QDS_m.RDS")
)
write_rds(
genus_turnover_richness_3QDS_m,
here::here("analyses/06_outputs/genus_turnover_richness_3QDS_m.RDS")
)
write_rds(
family_turnover_richness_3QDS_m,
here::here("analyses/06_outputs/family_turnover_richness_3QDS_m.RDS")
)
write_csv(
species_HDS_AIC_table,
here::here("analyses/06_outputs/species_HDS_AIC_table.csv")
)
write_csv(
genus_HDS_AIC_table,
here::here("analyses/06_outputs/genus_HDS_AIC_table.csv")
)
write_csv(
family_HDS_AIC_table,
here::here("analyses/06_outputs/family_HDS_AIC_table.csv")
)
write_csv(
species_3QDS_AIC_table,
here::here("analyses/06_outputs/species_3QDS_AIC_table.csv")
)
write_csv(
genus_3QDS_AIC_table,
here::here("analyses/06_outputs/genus_3QDS_AIC_table.csv")
)
write_csv(
family_3QDS_AIC_table,
here::here("analyses/06_outputs/family_3QDS_AIC_table.csv")
)
# TODO: tidy up ls() w/ rm()
if (all(!folder_is_empty(here::here("analyses/04_outputs"),
here::here("analyses/05_outputs"),
here::here("analyses/06_outputs"),
here::here("analyses/07_outputs")))) {
# Import the analyses' results
for (output in c("04_outputs",
"05_outputs",
"06_outputs",
"07_outputs")) {
import_all_objects_auto(here::here(glue("analyses/{output}")))
}
} else {
# Otherwise run the analyses needed first ...
source(here::here("analyses/01_import-region-polygons.R"))
source(here::here("analyses/02_import-floral-data.R"))
source(here::here("analyses/03_import-environmental-data.R"))
if (folder_is_empty(here::here("analyses/04_outputs"))) {
source(here::here("analyses/04_analyse-roughness-across-scales.R"))
}
if (folder_is_empty(here::here("analyses/05_outputs"))) {
source(here::here("analyses/05_analyse-species-turnover-w-distance.R"))
}
if (folder_is_empty(here::here("analyses/06_outputs"))) {
source(here::here("analyses/06_analyse-species-turnover-and-richness.R"))
}
if (folder_is_empty(here::here("analyses/07_outputs"))) {
source(here::here("analyses/07_analyse-species-and-roughness.R"))
}
# ... Then import the analyses' results
for (output in c("04_outputs",
"05_outputs",
"06_outputs",
"07_outputs")) {
import_all_objects_auto(here::here(glue("analyses/{output}")))
}
}
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
ylim(0, 3000) +
xlim(0, 12500) +
geom_point() +
facet_grid(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
ylim(0, 3000) +
xlim(0, 12500) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
#ylim(0, 3000) +
#xlim(0, 12500) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
#ylim(0, 3000) +
#xlim(0, 12500) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
#geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.75, 0.25))
gamma_vs_alpha_HDS_plot
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
#ylim(0, 3000) +
#xlim(0, 12500) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
#geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.85, 0.25))
gamma_vs_alpha_HDS_plot
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
#ylim(0, 3000) +
#xlim(0, 12500) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
#geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS richness",
#x = expression(paste(bar("S")["QDS"])),
y = "HDS richness") +
#y = expression(paste("S"["HDS"]))) +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.9, 0.25))
gamma_vs_alpha_HDS_plot
gamma_vs_beta_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_turnover, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
geom_smooth(formula = y ~ x, method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS turnover") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())
gamma_vs_beta_HDS_plot
gamma_vs_beta_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_turnover, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
geom_smooth(formula = y ~ x, method = "lm") +
geom_hline(yintercept = 1500, lty = "dashed") +
labs(x = "Mean QDS turnover") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "none",
axis.title.y = element_blank())
gamma_vs_beta_HDS_plot
gamma_vs_beta_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_turnover, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
geom_smooth(formula = y ~ x, method = "lm") +
labs(x = "Mean QDS turnover") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "none",
axis.title.y = element_blank())
gamma_vs_beta_HDS_plot
gamma_vs_alpha_HDS_plot
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
labs(x = "Mean QDS richness",
y = "HDS richness") +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.9, 0.25))
gamma_vs_beta_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_turnover, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
geom_smooth(formula = y ~ x, method = "lm") +
labs(x = "Mean QDS turnover") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "none",
axis.title.y = element_blank())
# Plot 2 panels + legend
cowplot::plot_grid(
gamma_vs_alpha_plot, gamma_vs_beta_plot,
nrow = 1, rel_widths = c(1, 0.9)
)
# Plot 2 panels + legend
cowplot::plot_grid(
gamma_vs_alpha_HDS_plot, gamma_vs_beta_HDS_plot,
nrow = 1, rel_widths = c(1, 0.9)
)
# Plot 2 panels + legend
cowplot::plot_grid(
gamma_vs_alpha_HDS_plot, gamma_vs_beta_HDS_plot,
nrow = 2,
)
# Plot 2 panels + legend
cowplot::plot_grid(
gamma_vs_alpha_HDS_plot, gamma_vs_beta_HDS_plot,
nrow = 2
)
gamma_vs_alpha_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_richness, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
# Log t/form to normalise avg_QDS_richness scores
geom_smooth(formula = y ~ log(x + 1), method = "lm") +
labs(x = "Mean QDS richness",
y = "HDS richness") +
scale_color_discrete(name = "Region") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = c(0.9, 0.25))
gamma_vs_beta_HDS_plot <-
ggplot(gamma_beta_alpha_HDS,
aes(avg_QDS_turnover, richness, col = region)) +
geom_point() +
facet_wrap(~ rank, scales = "free_y") +
geom_smooth(formula = y ~ x, method = "lm") +
labs(x = "Mean QDS turnover") +
theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "none")
# Plot 2 panels + legend
cowplot::plot_grid(
gamma_vs_alpha_HDS_plot, gamma_vs_beta_HDS_plot,
nrow = 2
)
taxa_enviro_roughness_HDS
taxa_enviro_roughness_HDS
ggplot(taxa_enviro_roughness_HDS, aes(roughness_Elevation, richness, col = region)) +
geom_point() +
facet_wrap(~ rank)
ggplot(taxa_enviro_roughness_HDS[, c("region", "richness", "rank", "roughness_Elevation")], aes(roughness_Elevation, richness, col = region)) +
geom_point() +
facet_wrap(~ rank)
taxa_enviro_roughness_HDS[, c("region", "richness", "rank", "roughness_Elevation")]
