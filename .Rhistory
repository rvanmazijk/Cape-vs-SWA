Sys.which("git")
source('~/Cape-vs-SWA/setup.R', echo=TRUE)
source('~/Cape-vs-SWA/setup.R', echo=TRUE)
SpatialPointsDataFrame()
SpatialPointsDataFrame(1)
SpatialPointsDataFrame(c(1, 1))
SpatialPointsDataFrame(matrix(1, 1))
source('~/Cape-vs-SWA/analyses/01_import-region-polygons.R', echo=TRUE)
source('~/Cape-vs-SWA/analyses/03_import-floral-data.R', echo=TRUE)
# Make SpatialPointsDataFrames for species, genus, and family occurences
GCFR_clean_flora_spdf_species <- make_SpatialPointsDataFrame(
GCFR_clean_flora,
feature_columns = "species"
)
GCFR_clean_flora_spdf_genus <- make_SpatialPointsDataFrame(
GCFR_clean_flora,
feature_columns = "genus"
)
GCFR_clean_flora_spdf_family <- make_SpatialPointsDataFrame(
GCFR_clean_flora,
feature_columns = "family"
)
# Query their presences in the GCFR border
GCFR_point_query_species <-
GCFR_clean_flora_spdf_species %over% GCFR_border
GCFR_point_query_genus <-
GCFR_clean_flora_spdf_genus %over% GCFR_border
GCFR_point_query_family <-
GCFR_clean_flora_spdf_family %over% GCFR_border
stopifnot(
length(GCFR_clean_flora_spdf_species) == length(!is.na(GCFR_point_query_species))
)
stopifnot(
length(GCFR_clean_flora_spdf_genus) == length(!is.na(GCFR_point_query_genus))
)
stopifnot(
length(GCFR_clean_flora_spdf_family) == length(!is.na(GCFR_point_query_family))
)
# Trim!
trimmed_GCFR_clean_flora_spdf_species <-
GCFR_clean_flora_spdf_species[!is.na(GCFR_point_query_species)[, 1], ]
trimmed_GCFR_clean_flora_spdf_genus <-
GCFR_clean_flora_spdf_genus[!is.na(GCFR_point_query_genus)[, 1], ]
trimmed_GCFR_clean_flora_spdf_family <-
GCFR_clean_flora_spdf_family[!is.na(GCFR_point_query_family)[, 1], ]
# .... SWAFR -------------------------------------------------------------------
# Make SpatialPointsDataFrames for species, genus, and family occurences
SWAFR_clean_flora_spdf_species <- make_SpatialPointsDataFrame(
SWAFR_clean_flora,
feature_columns = "species"
)
SWAFR_clean_flora_spdf_genus <- make_SpatialPointsDataFrame(
SWAFR_clean_flora,
feature_columns = "genus"
)
SWAFR_clean_flora_spdf_family <- make_SpatialPointsDataFrame(
SWAFR_clean_flora,
feature_columns = "family"
)
# Query their presences in the SWAFR border
SWAFR_point_query_species <-
SWAFR_clean_flora_spdf_species %over% SWAFR_border
SWAFR_point_query_genus <-
SWAFR_clean_flora_spdf_genus %over% SWAFR_border
SWAFR_point_query_family <-
SWAFR_clean_flora_spdf_family %over% SWAFR_border
stopifnot(
length(SWAFR_clean_flora_spdf_species) == length(!is.na(SWAFR_point_query_species))
)
stopifnot(
length(SWAFR_clean_flora_spdf_genus) == length(!is.na(SWAFR_point_query_genus))
)
stopifnot(
length(SWAFR_clean_flora_spdf_family) == length(!is.na(SWAFR_point_query_family))
)
trimmed_SWAFR_clean_flora_spdf_species <-
SWAFR_clean_flora_spdf_species[!is.na(SWAFR_point_query_species)[, 1], ]
trimmed_SWAFR_clean_flora_spdf_genus <-
SWAFR_clean_flora_spdf_genus[!is.na(SWAFR_point_query_genus)[, 1], ]
trimmed_SWAFR_clean_flora_spdf_family <-
SWAFR_clean_flora_spdf_family[!is.na(SWAFR_point_query_family)[, 1], ]
# Get pixel IDs for points -----------------------------------------------------
trimmed_GCFR_clean_flora_spdf_species$cell_nos <- cellFromXY(
GCFR_richness_QDS,
trimmed_GCFR_clean_flora_spdf_species
)
trimmed_GCFR_clean_flora_spdf_genus$cell_nos <- cellFromXY(
GCFR_richness_QDS,
trimmed_GCFR_clean_flora_spdf_genus
)
trimmed_GCFR_clean_flora_spdf_family$cell_nos <- cellFromXY(
GCFR_richness_QDS,
trimmed_GCFR_clean_flora_spdf_family
)
trimmed_SWAFR_clean_flora_spdf_species$cell_nos <- cellFromXY(
SWAFR_richness_QDS,
trimmed_SWAFR_clean_flora_spdf_species
)
trimmed_SWAFR_clean_flora_spdf_genus$cell_nos <- cellFromXY(
SWAFR_richness_QDS,
trimmed_SWAFR_clean_flora_spdf_genus
)
trimmed_SWAFR_clean_flora_spdf_family$cell_nos <- cellFromXY(
SWAFR_richness_QDS,
trimmed_SWAFR_clean_flora_spdf_family
)
species_turnover_geodist_GCFR <- calc_all_pw_jaccard(
trimmed_GCFR_clean_flora_spdf_species,
GCFR_richness_QDS
)
source('~/Cape-vs-SWA/functions/calc_all_pw_jaccard.R', echo=TRUE)
species_turnover_geodist_GCFR <- calc_all_pw_jaccard(
trimmed_GCFR_clean_flora_spdf_species,
GCFR_richness_QDS
)
GCFR_richness_QDS
source('~/Cape-vs-SWA/functions/calc_all_pw_jaccard.R', echo=TRUE)
species_turnover_geodist_GCFR <- calc_all_pw_jaccard(
trimmed_GCFR_clean_flora_spdf_species,
GCFR_richness_QDS
)
source('~/Cape-vs-SWA/functions/calc_all_pw_jaccard.R', echo=TRUE)
species_turnover_geodist_GCFR <- calc_all_pw_jaccard(
trimmed_GCFR_clean_flora_spdf_species,
GCFR_richness_QDS
)
source('~/Cape-vs-SWA/functions/calc_all_pw_jaccard.R', echo=TRUE)
species_turnover_geodist_GCFR <- calc_all_pw_jaccard(
trimmed_GCFR_clean_flora_spdf_species,
GCFR_richness_QDS
)
source('~/Cape-vs-SWA/functions/calc_all_pw_jaccard.R', echo=TRUE)
beepr
p_load(beepr)
genus_turnover_geodist_GCFR <- calc_all_pw_jaccard(
trimmed_GCFR_clean_flora_spdf_genus,
GCFR_richness_QDS
)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("manuscript/index.Rmd", "bookdown::gitbook")
